МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 
 
КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ
 


 
 
Звіт
з лабораторної роботи № 2 
з дисципліни Скриптові мови програмування
  
 
 


 
Виконала:                                                                     Перевірив:
ст. гр. ПЗПІ-23-5                                                          ​​​​ст. викладач кафедри ПІ
Буткевич Анна                                                             Сокорчук Ігор Петрович
 
 
 Харків 2025
1 ІСТОРІЯ ЗМІН


№
	Дата
	Версія звіту
	Опис змін та виправлень
	1
	22.04.2025
	0.1
	Створення розділів та результати
	

	

	

	

	

2 ЗАВДАННЯ


        Програмний код лабораторної роботи №2 на віртуальному сервері (VPS). Потрібно створити консольний застосунок «Продовольчий магазин "Весна"».
Ім'я скрипта: ~/імʼя_облікового_запису-task3.php
Наприклад: ~/pzpi-27-15-shukhevych-roman-task3.php
Програма після запуску повинна вивести на термінал перелік можливих дій:
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Далі програма очікує введення значення з клавіатури. Якщо користувач вводить число, якого немає в списку можливих команд, необхідно вивести повідомлення про помилку і запропонувати користувачу ввести інше число:


Введіть команду: 4
ПОМИЛКА! Введіть правильну команду
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Щоб розпочати купувати товари, необхідно ввести число «1», після чого користувач повинен потрапити в режим закупівлі товарів.
На екрані має з’явитися перелік продуктів, де кожен рядок складається з номера, назви товару і його вартості, наприклад:


Введіть команду: 1
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: _
Щоб купити товар, необхідно ввести його номер.
Після успішної перевірки на існування номера товару в списку, програма має попросити ввести кількість товару:


Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 1
У КОШИКУ:
НАЗВА        КІЛЬКІСТЬ
Хліб чорний  1
Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то товар додається в кошик.
Якщо вказано кількість «0», то товар видаляється з кошика:


Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
КОШИК ПОРОЖНІЙ
Далі знову відображається перелік товарів і пропонується купити наступний товар.
Якщо номер товару вказано неправильно, виводиться сповіщення про помилку, нову виводиться перелік товарів:




№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: 8
ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
Щоб завершити купувати товари і перейти до попереднього меню, необхідно ввести з клавіатури цифру «0».
Щоб отримати підсумковий рахунок, потрібно ввести число «2».
Рахунок має містити таку інформацію: №, назва, ціна товару, кількість товару, вартість товару. 
У кінці чека має бути: РАЗОМ ДО CПЛАТИ: сума_за_всі_товари
Наприклад:


Введіть команду: 2
№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Печиво "Весна"        14    1          14
2  Молоко пастеризоване  12    2          24
3  Сметана 20%           25    1          25
4  Хліб чорний           9     1          9
РАЗОМ ДО CПЛАТИ: 72
Щоб встановити свій профіль потрібно, ввести число «3», після чого програма попросить ввести ваше ім'я та ваш вік:
 
Ваше імʼя: _
Ваш вік: _
Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.
Користувач не може бути молодшим 7-ми або старшим 150-ти років
Щоб завершити роботу та вийти з програми, потрібно ввести число «0».
У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:
* обраний пункт меню існує;
* обраний товар існує;
* введена кількість товару більша нуля;
* імʼя користувача містить хча б одну літеру;
* вік користувача становить від 7-ми до 150-ти років.
3 ОПИС ВИКОНАНОЇ РОБОТИ
  
В рамках виконання лабораторної роботи було розроблено консольний програмний застосунок на мові програмування PHP, який симулює роботу простого продуктового магазину. Застосунок надає користувачеві текстовий інтерфейс для взаємодії, дозволяючи вибирати товари, формувати кошик, налаштовувати профіль та отримувати фінальний чек.


Нижче наведено опис ключових інженерних рішень, підходів та технологій, що були використані.


1. Архітектура застосунку та головний цикл керування


Застосунок реалізовано як скрипт для інтерфейсу командного рядка (CLI).


Основна логіка керування програмою знаходиться у нескінченному циклі while (true) (рядок 130), що забезпечує безперервну роботу програми до моменту, коли користувач сам вирішить вийти (команда "0").


Для обробки команд користувача використано конструкцію switch (рядок 134), що є ефективним та читабельним рішенням для розгалуження логіки на основі введених даних. Нерегламентовані команди обробляються в блоці default (рядок 147).


2. Модульний підхід та функціональна декомпозиція


Для покращення структури коду, його читабельності та можливості повторного використання, логіку було розділено на окремі функції:


printMenu(): Відповідає виключно за відображення головного меню.


selectProducts(): Інкапсулює всю логіку, пов'язану з вибором товарів, валідацією вводу та керуванням кошиком.


showReceipt(): Відповідає за форматування та виведення фінального чека.


setupProfile(): Реалізує функціонал налаштування профілю користувача з відповідною валідацією даних.


Такий підхід відповідає принципу єдиної відповідальності (Single Responsibility Principle) і робить код більш організованим.


3. Робота з даними


Зовнішнє сховище даних: Перелік товарів та їхні ціни зберігаються в окремому файлі products.json (рядок 3). Це є гарною практикою, оскільки відділяє дані від коду, дозволяючи легко змінювати асортимент без втручання в логіку програми.


Завантаження та парсинг: Дані з файлу завантажуються за допомогою функцій file_get_contents() та json_decode() (рядки 9-10). Передбачена базова обробка помилок на випадок відсутності файлу або некоректного JSON формату (рядки 4, 10).


Структури даних: Кошик ($cart) та профіль користувача ($user) реалізовані за допомогою асоціативних масивів PHP, що є оптимальним рішенням для зберігання пар "ключ-значення" (наприклад, id_товару => кількість).


4. Реалізація валідації вводу користувача


Ключовою частиною роботи була реалізація надійних перевірок даних, що вводяться користувачем.


Перевірка існування товару: Перед додаванням до кошика виконується перевірка наявності товару у списку за допомогою isset().


52 if (!isset($products[$choice])) {
53     echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
54     continue;
55 }


Перевірка кількості товару: Кількість перевіряється на числове значення та на відповідність допустимому діапазону (від 0 до 99).


61 if (!is_numeric($qty) || intval($qty) < 0 || intval($qty) > 99) {
62     echo "ПОМИЛКА! Невірна кількість.\n";
63     continue;
64 }


Окремо обробляється введення 0 як команди для видалення товару з кошика (рядок 70).


Перевірка імені користувача: Для валідації імені використано регулярний вираз, що гарантує наявність хоча б однієї літери.


108 if (!preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/u', $name)) {
109     echo "ПОМИЛКА: Імʼя не може бути порожнім і повинно містити хоча б одну літеру.\n";
110     continue;
111 }


Перевірка віку користувача: Вік перевіряється на числове значення та на приналежність до діапазону [7, 150].


118 if (!is_numeric($age) || $age < 7 || $age > 150) {
119     echo "ПОМИЛКА: Вік повинен бути від 7 до 150.\n";
120     continue;
121 }


5. Підтримка кириличних символів (UTF-8)


Для коректної роботи з українськими літерами було застосовано спеціалізовані рішення:


При вирівнюванні тексту в таблиці товарів для підрахунку довжини рядка використано багатобайтову функцію mb_strlen() (рядок 36), що коректно обробляє символи UTF-8.


У регулярному виразі для перевірки імені використано модифікатор /u (рядок 109), який вмикає режим обробки рядка як UTF-8.


6. Форматування виводу


Для створення табличного та акуратного виводу даних (список товарів, чек) активно використовувалася функція printf() (рядки 39, 99), яка дозволяє гнучко форматувати рядки із заданою шириною полів та вирівнюванням.


Результати знаходяться в Додатку Б.










4 ВИСНОВКИ


Розроблений програмний застосунок повністю відповідає поставленим у завданні вимогам. Були успішно реалізовані всі функціональні модулі: вибір товарів, керування кошиком, налаштування профілю та генерація чека. Особливу увагу було приділено надійній валідації даних користувача та коректній роботі з кириличними символами. Структура коду є модульною та добре читабельною.
ДОДАТОК А
Відеозапис


Відеозапис презентації результатів лабораторної роботи: https://youtu.be/1rRPphgAqv4


Хронологічний опис відеозапису:
0:00 - Вступ
0:09 - Визначення рhp файлу
0:19 - Файл products.json
1:13 - Функція printMenu
1:15 - Функція selectProducts
2:53 - Функція showReceipt
3:23 - Функція setupProfile
4:14 - Головний цикл програми
5:26 - Демонстрація головного меню
5:33 - Демонстрація додавання товару
5:54 - Демонстрація рахунку
6:04 - Налаштування профілю
6:16 - Вихід з програми






ДОДАТОК Б
Графічні матеріали


  

Рисунок Б.1 - Демонстрація головного меню


  

Рисунок Б.2 - Демонстрація чеку


  

Рисунок Б.3 - Демонстрація налаштування профілю


  

Рисунок Б.4 - Демонстрація виходу з програми




ДОДАТОК В
Програмний код
В.1 { smp-pzpi-23-5-butkevych-anna-lab2-code }
GitHub репозиторій: https://github.com/NureButkevychAnna/smp-pzpi-23-5-butkevych-anna/blob/main/Lab2/smp-pzpi-23-5-butkevych-anna-lab2/smp-pzpi-23-5-butkevych-anna-lab2-code


1   <?php
2
3   $productsFile = __DIR__ . "/products.json";
4   if (!file_exists($productsFile)) {
5       echo "Файл з продуктами не знайдено: $productsFile\n";
6       exit(1);
7   }
8
9   $jsonData = file_get_contents($productsFile);
10  $products = json_decode($jsonData, true);
11  if (!is_array($products)) {
12      echo "Помилка: Неможливо розпарсити JSON з продуктами.\n";
13      exit(1);
14  }
15
16  $cart = [];
17  $user = ["name" => "", "age" => 0];
18
19  function printMenu() {
20      echo "\n################################\n";
21      echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
22      echo "################################\n";
23      echo "1 Вибрати товари\n";
24      echo "2 Отримати підсумковий рахунок\n";
25      echo "3 Налаштувати свій профіль\n";
26      echo "0 Вийти з програми\n";
27      echo "Введіть команду: ";
28  }
29
30  function selectProducts(&$cart, $products) {
31      while (true) {
32          echo "\n№  НАЗВА                      ЦІНА\n";
33          foreach ($products as $num => $item) {
34              $name = $item["name"];
35              $price = $item["price"];
36              $pad = 26 - mb_strlen($name, 'UTF-8');
37              $padded_name = $name . str_repeat(' ', max($pad, 0));
38
39              printf("%-2d %s %5d\n", $num, $padded_name, $price);
40          }
41
42          echo "   -----------\n0  ПОВЕРНУТИСЯ\n";
43          echo "Виберіть товар: ";
44          $choice = trim(fgets(STDIN));
45
46          if (!is_numeric($choice)) continue;
47
48          $choice = intval($choice);
49
50          if ($choice === 0) break;
51
52          if (!isset($products[$choice])) {
53              echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
54              continue;
55          }
56
57          echo "Вибрано: {$products[$choice]['name']}\n";
58          echo "Введіть кількість, штук: ";
59          $qty = trim(fgets(STDIN));
60
61          if (!is_numeric($qty) || intval($qty) < 0 || intval($qty) > 99) {
62              echo "ПОМИЛКА! Невірна кількість.\n";
63              continue;
64          }
65
66          $qty = intval($qty);
67          if ($qty === 0) {
68              unset($cart[$choice]);
69              echo "ВИДАЛЯЮ З КОШИКА\n";
70          } else {
71              $cart[$choice] = $qty;
72          }
73
74          if (count($cart) > 0) {
75              echo "У КОШИКУ:\nНАЗВА        КІЛЬКІСТЬ\n";
76              foreach ($cart as $id => $q) {
77                  echo "{$products[$id]['name']}  $q\n";
78              }
79          } else {
80              echo "КОШИК ПОРОЖНІЙ\n";
81          }
82      }
83  }
84
85  function showReceipt($cart, $products) {
86      if (empty($cart)) {
87          echo "КОШИК ПОРОЖНІЙ\n";
88          return;
89      }
90
91      echo "№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
92      $i = 1;
93      $total = 0;
94      foreach ($cart as $id => $qty) {
95          $name = $products[$id]['name'];
96          $price = $products[$id]['price'];
97          $cost = $price * $qty;
98          $total += $cost;
99          printf("%-2d %-25s %6d %8d %9d\n", $i++, $name, $price, $qty, $cost);
100     }
101     echo "РАЗОМ ДО CПЛАТИ: $total\n";
102 }
103
104 function setupProfile(&$user) {
105     while (true) {
106         echo "Ваше імʼя: ";
107         $name = trim(fgets(STDIN));
108         if (!preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/u', $name)) {
109             echo "ПОМИЛКА: Імʼя не може бути порожнім і повинно містити хоча б одну літеру.\n";
110             continue;
111         }
112         break;
113     }
114
115     while (true) {
116         echo "Ваш вік: ";
117         $age = trim(fgets(STDIN));
118         if (!is_numeric($age) || $age < 7 || $age > 150) {
119             echo "ПОМИЛКА: Вік повинен бути від 7 до 150.\n";
120             continue;
121         }
122         break;
123     }
124
125     $user['name'] = $name;
126     $user['age'] = intval($age);
127     echo "Профіль збережено!\n";
128 }
129
130 while (true) {
131     printMenu();
132     $cmd = trim(fgets(STDIN));
133
134     switch ($cmd) {
135         case "1":
136             selectProducts($cart, $products);
137             break;
138         case "2":
139             showReceipt($cart, $products);
140             break;
141         case "3":
142             setupProfile($user);
143             break;
144         case "0":
145             echo "До побачення!\n";
146             exit(0);
147         default:
148             echo "ПОМИЛКА! Введіть правильну команду\n";
149     }
150 }


В.2 { products.json }
GitHub репозиторій: https://github.com/NureButkevychAnna/smp-pzpi-23-5-butkevych-anna/blob/main/Lab2/smp-pzpi-23-5-butkevych-anna-lab2/products.json


1 {
2  "1": { "name": "Молоко пастеризоване", "price": 12 },
3  "2": { "name": "Хліб чорний", "price": 9 },
4  "3": { "name": "Сир білий", "price": 21 },
5  "4": { "name": "Сметана 20%", "price": 25 },
6  "5": { "name": "Кефір 1%", "price": 19 },
7  "6": { "name": "Вода газована", "price": 18 },
8  "7": { "name": "Печиво \"Весна\"", "price": 14 }
9 }